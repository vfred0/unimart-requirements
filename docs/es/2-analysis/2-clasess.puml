@startuml classes
skinparam Dpi 500
skinparam roundcorner 20
' skinparam linetype ortho
!define ZERO_TO_ONE 0..1
!define ZERO_TO_MANY 0..N
!define ONE_TO_ONE 1..1
!define ONE_TO_TWO 1..2
!define ONE_TO_MANY 1..N
!define EMPTY ""

!define compositionRelation(all, part, cardinality) all *--> part: cardinality

!define associationRelation(client, server, cardinality) client --> server: cardinality

!define aggregationRelation(whole, part, cardinality) whole o--> part: cardinality

!define useRelation(user, used, cardinality) user ..> used: cardinality

!define inheritanceRelation(child, parent, cardinality) child <|-- parent: cardinality

enum Categoria {
    + LIBROS_TEXTO_MATERIAL_EDUCATIVO
    + MATERIAL_DE_OFICINA
    + ELECTRÓNICA
    + MOBILIARIO_Y_DECORACIÓN
    + INDUMENTARIA
    + MATERIAL_DE_LABORATORIO
    + INSTRUMENTOS_MUSICALES
    + ARTÍCULOS_DEPORTIVOS
    + ARTES_MANUALES
    + JUEGOS_JUGUETES
}

enum Estado {
    + NUEVO
    + SEMI_NUEVO
    + USADO
    + BAJA_CALIDAD
}

enum TipoArticulo {
    + PUBLICADO
    + PROPUESTO
    + INTERCAMBIADO
}

class Usuario {
    - articulos: Articulo[]
    - calificaciones: Calificacion[]
}

class Articulo {
    - categoria: Categoria
    - estado: Estado
    - tipoArticulo: TipoArticulo    
}

class Calificacion {        
    - puntuacion: short
    - comentario: String
}

class Intercambio {
    - nombreUsuario: String
    - fotoUsuario: String
    - articuloParaIntercambiar: String
    - articuloParaRecibir: String
    - fecha: string
}

aggregationRelation(Usuario, Articulo, ZERO_TO_MANY)
compositionRelation(Articulo, Categoria, ONE_TO_ONE)
compositionRelation(Articulo, Estado, ONE_TO_ONE)
compositionRelation(Articulo, TipoArticulo, ONE_TO_ONE)
aggregationRelation(Usuario, Calificacion, ZERO_TO_MANY)
useRelation(Intercambio, Usuario, ONE_TO_ONE)
useRelation(Intercambio, Articulo, ONE_TO_ONE)
@enduml